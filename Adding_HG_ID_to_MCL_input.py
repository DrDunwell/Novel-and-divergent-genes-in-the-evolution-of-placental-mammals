# -*- coding: utf-8 -*-
"""
Python 2.7
Thomas Dunwell, University of Oxford, 2016.
Adding_HG_ID_to_MCL_input.py
"""

#This script was used in a paper titled "Novel and divergent genes in the evolution of placental mammals" Dunwell et al., In press

#This script runs through the output of mcxdeblast after running MCL and assigns the homology group ID for the queery and subject.

def MCL_out_put_2_cluster_ID_addition3(MCL_file_1,MCL_file_2):
    MCL_file_1 = open(MCL_file_1,"r")
    MCL_file_2 = open(MCL_file_2,"r")
    My_MCL_file = open("My_MCL_file","w")
    MCL_file_2_line_number = 0
    #this loop iterates through the MCL output file and assigns every protein ID a value equivalent to the cluster of homology ID it belongs to.
    for MCL_file_2_line in MCL_file_2:
        MCL_file_2_line_number += 1
        MCL_file_2_line_IDs = MCL_file_2_line.split()
        for i in range(0,len(MCL_file_2_line_IDs)):
            results.update({MCL_file_2_line_IDs[i]: MCL_file_2_line_number})
    for MCL_file_1_line in MCL_file_1:
        MCL_file_1_line_split = MCL_file_1_line.split()
        My_MCL_file.write(str(MCL_file_1_line.strip("\n")) + "\t" + str(results.get(MCL_file_1_line_split[0])) + "\t" + str(results.get(MCL_file_1_line_split[1])) + "\n")
    MCL_file_1.close()
    MCL_file_2.close()
    My_MCL_file.close()
	
if __name__ == "__main__":
	#change these names to match those generated by running mcxdeblast and Homology_Group_Frequence_Counting.py respectively.
	MCL_out_put_2_cluster_ID_addition3("Output Of mcxdeblast","Output of Homology_Group_Frequence_Counting.py")